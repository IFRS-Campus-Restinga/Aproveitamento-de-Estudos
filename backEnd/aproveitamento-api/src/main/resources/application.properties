management.endpoints.web.exposure.include=*
server.port=8080

# ------------------------------------------------------------------------------------
# Autenticacao utilizando o OAuth da google

logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security.oauth2=TRACE

spring.security.oauth2.client.registration.google-idp.provider= google
spring.security.oauth2.client.registration.google-idp.client-id= 620367499562-ptr0k1f8qd6mk0jndrnnat8joeg4m4ug.apps.googleusercontent.com
spring.security.oauth2.client.registration.google-idp.client-secret= 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
spring.security.oauth2.client.registration.google-idp.scope= openid, profile, email
spring.security.oauth2.client.registration.google-idp.client-name= devii-aproveitamento-auth
spring.security.oauth2.client.provider.google-idp.user-name-attribute= email


# ----*  loggin com o git hub (posteriori)  *----- #
#spring.security.oauth2.client.provider.github.user-name-attribute=login
#spring.security.oauth2.client.registration.github-idp.provider=github
#spring.security.oauth2.client.registration.github-idp.client-id=${GITHUB_CLIENT_ID:github-client-id}
#spring.security.oauth2.client.registration.github-idp.client-secret=${GITHUB_CLIENT_SECRET:github-client-secret}
#spring.security.oauth2.client.registration.github-idp.scope=user:email, read:user
#spring.security.oauth2.client.registration.github-idp.client-name=Sign in with GitHub



#spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8080
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=  http://localhost:8080

spring.security.oauth2.resourceserver.jwt.issuer-uri = https://accounts.google.com
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= https://www.googleapis.com/oauth2/v3/userinfo

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json
#



# -------------------------------------------------------------------------------------
# -------------------------------------------------------------------------------------
#Autenticacao utilizando o SAML2 com o CAFe
# estamos utilizando a padronização feita na documentação da rnp
# e que se espera ser o que a CAFe do ifrs deva responder
# https://3340914729-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-M94Z581aPIo4Bzo9ImS%2Fuploads%2F0gjxmef2LufznmdvrD6I%2FEspecifica%C3%A7%C3%A3o%20de%20uso%20dos%20atributos%20CAFe.pdf?alt=media&token=bd27629b-e3bc-41e5-9cb9-09e880c667c0
# escreve o local dos metadados do fornecedor de identidade(idp) que sera o cafe # https://cafe.ifrs.edu.br/idp/
# no momento estamos utilizando o saml2 da Okta para teste e validação do fluxo: https://developer.okta.com/

#spring.security.saml2.relyingparty.registration.okta.assertingparty.metadata-uri=https://dev-85726417.okta.com/app/exkd8bqx7ca5s4zO35d7/sso/saml/metadata
#spring.security.saml2.relyingparty.registration.okta.signing.credentials.certificate-location= classpath:certificate.crt
#spring.security.saml2.relyingparty.registration.okta.signing.credentials.private-key-location= classpath:privateKey.key

#spring.security.saml2.relyingparty.registration.okta.singlelogout.binding=POST
#spring.security.saml2.relyingparty.registration.okta.singlelogout.response-url="{baseUrl}/logout/saml2/slo"
# --------------------------------------------------------------------------------------

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.show-sql=true
#http://localhost:8080/h2-console/


spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/devii?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=2023
spring.jpa.show-sql: true
spring.jpa.properties.hibernate.format_sql=true

server.error.include-stacktrace=always
server.error.include-message=always


